# dilla.glaze.files (https://github.com/dillacorn/win-glaze-dots)
# This config is my personalized config I use specifically for my work computer.
# change file name to config.yaml and delete adjacent config.yaml files to use this config within the folder.
general:
  # Commands to run when the WM has started.
  startup_commands: ["shell-exec yasb"]

  # Commands to run just before the WM is shutdown.
  shutdown_commands: ["shell-exec taskkill /IM yasb.exe /F"]

  # Commands to run after the WM config is reloaded.
  config_reload_commands: []

  # Whether to automatically focus windows underneath the cursor.
  focus_follows_cursor: false

  # Whether to switch back and forth between the previously focused
  # workspace when focusing the current workspace.
  toggle_workspace_on_refocus: false

  cursor_jump:
    # Whether to automatically move the cursor on the specified trigger.
    enabled: true

    # Trigger for cursor jump:
    # - "monitor_focus": Jump when focus changes between monitors.
    # - "window_focus": Jump when focus changes between windows.
    trigger: "monitor_focus"

  # How windows should be hidden when switching workspaces.
  # - 'cloak': Recommended. Hides windows with no animation.
  # - 'hide': Legacy method (v3.5 and earlier) that has a brief animation,
  # but has stability issues with some apps.
  hide_method: "cloak"
  # Affects which windows get shown in the native Windows taskbar. Has no
  # effect if `hide_method: 'hide'`.
  # - 'true': Show all windows (regardless of workspace).
  # - 'false': Only show windows from the currently shown workspaces.
  show_all_in_taskbar: true

gaps:
  # Whether to scale the gaps with the DPI of the monitor.
  scale_with_dpi: true

  # Gap between adjacent windows.
  inner_gap: "10px"

  # Gap between windows and the screen edge.
  outer_gap:
    top: "38px"
    right: "10px"
    bottom: "10px"
    left: "10px"

window_effects:
  # Visual effects to apply to the focused window.
  focused_window:
    # Highlight the window with a colored border.
    # ** Exclusive to Windows 11 due to API limitations.
    border:
      enabled: true
      color: "#b5bd68"

    # Remove the title bar from the window"s frame. Note that this can
    # cause rendering issues for some applications.
    hide_title_bar:
      enabled: false

    # Change the corner style of the window"s frame.
    # ** Exclusive to Windows 11 due to API limitations.
    corner_style:
      enabled: true
      # Allowed values: "square", "rounded", "small_rounded".
      style: "square"

    # Change the transparency of the window.
    transparency:
      enabled: false
      # Can be something like '95%' or '0.95' for slightly transparent windows.
      # '0' or '0%' is fully transparent (and, by consequence, unfocusable).
      opacity: '95%'

  # Visual effects to apply to non-focused windows.
  other_windows:
    border:
      enabled: false
      color: "#a1a1a1"
    hide_title_bar:
      enabled: false
    corner_style:
      enabled: true
      style: "square"
    transparency:
      enabled: false
      opacity: '95%'

window_behavior:
  # New windows are created in this state whenever possible.
  # Allowed values: "tiling", "floating".
  initial_state: "floating"

  # Sets the default options for when a new window is created. This also
  # changes the defaults for when the state change commands, like
  # `set-floating`, are used without any flags.
  state_defaults:
    floating:
      # Whether to center floating windows by default.
      centered: false

      # Whether to show floating windows as always on top.
      shown_on_top: true

    fullscreen:
      # Maximize the window if possible. If the window doesn"t have a
      # maximize button, then it"ll be fullscreen"ed normally instead.
      maximized: true

      # Whether to show fullscreen windows as always on top.
      shown_on_top: true

workspaces:
  - name: "1"
    display_name: "1: CHATS"
  - name: "2"
    display_name: "2: WORK"
  - name: "3"
    display_name: "3: MAIL"
  - name: "4"
    display_name: "4: FILES"
  - name: "5"
    display_name: "5: HTTP"
  - name: "6"
    display_name: "6: OFFICE"
  - name: "7"
    display_name: "7: PDF"
  - name: "8"
    display_name: "8"
  - name: "9"
    display_name: "9"
  - name: "10"
    display_name: "10"

# My Configuration: Three physical displays/monitors
window_rules:
  - commands: ["move --workspace 1"]
    match:
      # Move ms-teams to workspace 1.
      - window_process: { regex: "ms-teams" }

  - commands: ["move --workspace 2"]
    match:
      # Move autocad to workspace 2.
      - window_process: { regex: "acad" }
      
  - commands: ["move --workspace 3"]
    match:
      # Move outlook to workspace 3.
      - window_process: { regex: "OUTLOOK|olk" }
    
  - commands: ["move --workspace 4"]
    match:
      # Move directory-opus to workspace 4.
      - window_process: { regex: "dopus" }

  - commands: ["move --workspace 5"]
    match:
      # Move browsers to workspace 5.
      - window_process: { regex: "librewolf|firefox|chrome|brave" }

  - commands: ["move --workspace 6"]
    match:
      # Move microsoft office applications to workspace 6.
      - window_process: { regex: "WINWORD|EXCEL|MSPUB|MSACCESS|soffice|wordpad" }

  - commands: ["move --workspace 7"]
    match:
      # Move pdf viewer/editors to workspace 7.
      - window_process: { regex: "PDFXEdit|SumatraPDF|okular|pdfeditor|Acrobat|Revu" }
      
  - commands: ["ignore"]
    match:
      # Windows Applications
      - window_process: { equals: "explorer" }

      # Ignore rules for Window Manager apps
      - window_process: { equals: "zebar" }
      - window_process: { equals: "yasb" }
      - window_process: { equals: "Flow.Launcher" }
      - window_process: { equals: "AltSnap" }
      - window_process: { equals: "flameshot" }
      - window_process: { equals: "LiveCaptions" }

      # Ignore rule for picture-in-picture windows in browsers.
      - window_title: { regex: "[Pp]icture.in.[Pp]icture" }
        window_class: { regex: "Chrome_WidgetWin_1|MozillaDialogClass" }

      # Ignore rules for various 3rd-party apps.
      - window_process: { equals: "PowerToys" }
        window_class: { regex: 'HwndWrapper\[PowerToys\.PowerAccent.*?\]' }
      - window_process: { equals: "PowerToys" }
        window_title: { regex: ".*? - Peek" }
      - window_process: { equals: "Lively" }
        window_class: { regex: "HwndWrapper" }
      - window_process: { equals: "Mullvad VPN" }
      - window_process: { equals: "ui32" }
      - window_process: { equals: "wallpaper32" }
      - window_process: { equals: "wallpaper64" }

      # Ignore Windows Input Experience (Civil 3D popups)
      - window_process: { equals: "TextInputHost" }  # Sometimes appears instead
      - window_process: { equals: "Windows Input Experience" }

      # Civil 3D + child dialogs
      - window_process: { equals: "acad" }
        window_title: { equals: "Structure Label Style" }
      
      - window_process: { equals: "acad" }
        window_title: { regex: "^Label Style Composer - .+" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "Text Component Editor - Contents" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "Add Labels" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "Table Tag Numbering" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "Edit Command Settings - AddSegmentLabel" }
      
      - window_process: { equals: "acad" }
        window_title: { regex: "^Network Layout Tools - .+" }
      
      - window_process: { equals: "acad" }
        window_title: { regex: "^(Select|Properties|Layer|Plot|Hatch|$)$" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "QuickCalc" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "Graphics Performance" }
      
      - window_process: { equals: "acad" }
        window_title: { equals: "Hidden Message Settings" }

      - window_process: { equals: "acad" }
        window_title: { equals: "DesignCenter" }

      - window_process: { equals: "acad" }
        window_title: { equals: "Export Autodesk Civil 3D Drawing" }
      
      - window_process: { equals: "acad" }
        window_class: { regex: "^(Afx:.*|Autodesk.*Dialog|Adsk.*)$" }
      
      - window_process: { regex: "^(ADPClientService|AdskAccessUIHost|AdskAccessCore|AdSSO|AdskIdentityManager)$" }
      
      # Ignore rules for 3rd Party applications
      - window_process: { equals: "LTSVC" }
      - window_process: { equals: "LTSvcMon" }
      - window_process: { equals: "LTTray" }

  - commands: ["set-floating"]
    match:
      # Set Task Manager to float
      - window_process: { equals: "Taskmgr" }

      # Set speedcrunch(calculator) to float
      - window_process: { equals: "speedcrunch" }

      # Set winspy window to float
      - window_process: { equals: "winspy" }

      # Set localsend window to float
      - window_process: { equals: "localsend_app" }

      # Set rustdesk window to float
      - window_process: { equals: "RustDesk" }

      # Set several windows applications to float
      - window_process: { equals: "ApplicationFrameHost" }
      
  - commands: ["set-floating --centered"]
    match:
      # Set EarTrumpets "Volume Mixer" window to float and center it
      - window_title: { regex: "Volume Mixer" }
      - window_process: { equals: "EarTrumpet" }
      
binding_modes:
  # When enabled, the focused window can be resized via arrow keys or HJKL.
  - name: "resize"
    keybindings:
      - commands: ["resize --width -2%"]
        bindings: ["l", "right"]
      - commands: ["resize --width +2%"]
        bindings: ["h", "left"]
      - commands: ["resize --height +2%"]
        bindings: ["k", "up"]
      - commands: ["resize --height -2%"]
        bindings: ["j", "down"]
      # Press enter/escape to return to default keybindings.
      - commands: ["wm-disable-binding-mode --name resize"]
        bindings: ["escape", "enter"]

  # When enabled, all keybindings are disabled except for alt+shift+z which
  # returns to default keybindings.
  - name: "pause"
    keybindings:
      - commands: ["wm-disable-binding-mode --name pause"]
        bindings: ["alt+shift+z"]

keybindings:
  # Toggle YASB
  - commands:
      - shell-exec --hide-window powershell -NoProfile -Command "if (Get-Process yasb -ErrorAction SilentlyContinue) { Stop-Process -Name yasb -Force } else { Start-Process yasb }"
    bindings: ["alt+ctrl+b"]

  # Shift focus in a given direction.
  - commands: ["focus --direction left"]
    bindings: ["alt+h", "alt+left"]
  - commands: ["focus --direction right"]
    bindings: ["alt+l", "alt+right"]
  - commands: ["focus --direction up"]
    bindings: ["alt+k", "alt+up"]
  - commands: ["focus --direction down"]
    bindings: ["alt+j", "alt+down"]

  # Move focused window in a given direction.
  - commands: ["move --direction left"]
    bindings: ["alt+shift+h", "alt+shift+left"]
  - commands: ["move --direction right"]
    bindings: ["alt+shift+l", "alt+shift+right"]
  - commands: ["move --direction up"]
    bindings: ["alt+shift+k", "alt+shift+up"]
  - commands: ["move --direction down"]
    bindings: ["alt+shift+j", "alt+shift+down"]

  # Resize focused window by a percentage or pixel amount.
  - commands: ["resize --width -2%"]
    bindings: ["alt+y", "alt+ctrl+right"]
  - commands: ["resize --width +2%"]
    bindings: ["alt+o", "alt+ctrl+left"]
  - commands: ["resize --height +2%"]
    bindings: ["alt+i", "alt+ctrl+up"]
  - commands: ["resize --height -2%"]
    bindings: ["alt+u", "alt+ctrl+down"]

  # As an alternative to the resize keybindings above, resize mode enables
  # resizing via arrow keys or HJKL. The binding mode is defined above with
  # the name "resize".
  - commands: ["wm-enable-binding-mode --name resize"]
    bindings: ["alt+ctrl+r"]

  # Disables all keybindings until alt+shift+z is pressed again.
  - commands: ["wm-enable-binding-mode --name pause"]
    bindings: ["alt+shift+z"]

  # Change tiling direction. This determines where new tiling windows will
  # be inserted.
  - commands: ["toggle-tiling-direction"]
    bindings: ["alt+shift+v"]

  # Change the focused window to be floating.
  - commands: ["toggle-floating --centered"]
    bindings: ["alt+f"]

  # Change the focused window to be tiling.
  - commands: ["toggle-tiling"]
    bindings: ["alt+t"]

  # Change the focused window to be fullscreen.
  - commands:
      - "toggle-fullscreen"
      - "shell-exec --hide-window powershell -NoProfile -WindowStyle Hidden -ExecutionPolicy Bypass -Command \"Start-Sleep -Milliseconds 70; Start-Process -WindowStyle Hidden glazewm -ArgumentList 'command wm-redraw'\""
    bindings: ["alt+ctrl+f"]

  # Minimize focused window.
  - commands: ["toggle-minimized"]
    bindings: ["alt+m"]

  # Close focused window.
  - commands: ["close"]
    bindings: ["alt+shift+q"]

  # Kill GlazeWM process safely.
  - commands: ["wm-exit"]
    bindings: ["alt+ctrl+shift+k"]

  # Re-evaluate configuration file.
  - commands: ["wm-reload-config"]
    bindings: ["alt+shift+r"]

  # Redraw all windows.
  - commands: ["wm-redraw"]
    bindings: ["alt+ctrl+shift+w"]

  # Launch Powershell terminal
  # commands: ["shell-exec alacritty --title \"alacritty | powershell\" -e powershell -NoProfile -NoLogo"] <- if alacritty can be used
  - commands: ["shell-exec powershell -NoProfile -NoLogo"]
    bindings: ["alt+shift+enter"]

  # Focus the next/previous workspace defined in `workspaces` config.
  - commands: ["focus --next-workspace"]
    bindings: ["alt+ctrl+d"]
  - commands: ["focus --prev-workspace"]
    bindings: ["alt+ctrl+a"]

  # Focus the workspace that last had focus.
  - commands: ["focus --recent-workspace"]
    bindings: ["alt+ctrl+z"]

  # Change focus to a workspace defined in `workspaces` config.
  - commands: ["focus --workspace 1"]
    bindings: ["alt+1"]
  - commands: ["focus --workspace 2"]
    bindings: ["alt+2"]
  - commands: ["focus --workspace 3"]
    bindings: ["alt+3"]
  - commands: ["focus --workspace 4"]
    bindings: ["alt+4"]
  - commands: ["focus --workspace 5"]
    bindings: ["alt+5"]
  - commands: ["focus --workspace 6"]
    bindings: ["alt+6"]
  - commands: ["focus --workspace 7"]
    bindings: ["alt+7"]
  - commands: ["focus --workspace 8"]
    bindings: ["alt+8"]
  - commands: ["focus --workspace 9"]
    bindings: ["alt+9"]
  - commands: ["focus --workspace 10"]
    bindings: ["alt+0"]

  # Move the focused window"s parent workspace to a monitor in a given
  # direction.
  - commands: ["move-workspace --direction left"]
    bindings: ["alt+ctrl+shift+left"]
  - commands: ["move-workspace --direction right"]
    bindings: ["alt+ctrl+shift+right"]
  - commands: ["move-workspace --direction up"]
    bindings: ["alt+ctrl+shift+up"]
  - commands: ["move-workspace --direction down"]
    bindings: ["alt+ctrl+shift+down"]

  # Move focused window to a workspace defined in `workspaces` config.
  - commands: ["move --workspace 1"]
    bindings: ["alt+shift+1"]
  - commands: ["move --workspace 2"]
    bindings: ["alt+shift+2"]
  - commands: ["move --workspace 3"]
    bindings: ["alt+shift+3"]
  - commands: ["move --workspace 4"]
    bindings: ["alt+shift+4"]
  - commands: ["move --workspace 5"]
    bindings: ["alt+shift+5"]
  - commands: ["move --workspace 6"]
    bindings: ["alt+shift+6"]
  - commands: ["move --workspace 7"]
    bindings: ["alt+shift+7"]
  - commands: ["move --workspace 8"]
    bindings: ["alt+shift+8"]
  - commands: ["move --workspace 9"]
    bindings: ["alt+shift+9"]
  - commands: ["move --workspace 10"]
    bindings: ["alt+shift+0"]
